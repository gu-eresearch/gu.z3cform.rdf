
=====
Forms
=====

Let's do some form testing here with rdflib graphs and our n3 widgets.

Get started and initialise z3c.form stuff

    >>> from z3c.form import testing
    >>> testing.setupFormDefaults()
    >>> from zope.publisher.interfaces.browser import IBrowserRequest
    >>> import z3c.form.interfaces
    >>> z3c.form.interfaces.IFormLayer.isOrExtends(IBrowserRequest)
    False

We also have a root object, where we can add content to

    >>> print(root)
    <zope.site.folder.Folder object at ...>
    >>> root.__name__, root.__parent__
    (None, None)

Define a few namespaces we'll need later
    >>> from rdflib import Namespace, RDF, RDFS
    >>> from ordf.namespace import FOAF
    >>> VCARD = Namespace(u'http://www.w3.org/2006/vcard/ns#')
    >>> from pprint import pprint

Let's create a graph we use to store and load data for forms

    >>> from zope.component import getUtility
    >>> from gu.z3cform.rdf.interfaces import IORDF
    >>> handler = getUtility(IORDF).getHandler()
    >>> context = None

We also need an AddForm and request to create new objects

    >>> from gu.z3cform.rdf.testing import ExtensibleAddForm
    >>> request = testing.TestRequest()
    >>> add_form = ExtensibleAddForm(context, request)
    >>> add_form.rdftype = FOAF['Person']
    >>> add_form.update()
    >>> pprint(add_form.fields.items())
    [('http___xmlns_com_foaf_0_1_givenName',
      <Field 'http___xmlns_com_foaf_0_1_givenName'>),
     ('http___xmlns_com_foaf_0_1_familyName',
      <Field 'http___xmlns_com_foaf_0_1_familyName'>),
     ('http___www_w3_org_2006_vcard_ns_hasAddress',
      <Field 'http___www_w3_org_2006_vcard_ns_hasAddress'>)]
    >>> pprint(add_form.widgets.items())
    [('http___xmlns_com_foaf_0_1_givenName',
      <TextWidget 'form.widgets.http___xmlns_com_foaf_0_1_givenName'>),
     ('http___xmlns_com_foaf_0_1_familyName',
      <TextWidget 'form.widgets.http___xmlns_com_foaf_0_1_familyName'>),
     ('http___www_w3_org_2006_vcard_ns_hasAddress',
      <RDFObjectWidget 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress'>)]

So far all the fields are there. Let us check the object field as well

    >>> objwidget = add_form.widgets['http___www_w3_org_2006_vcard_ns_hasAddress']
    >>> pprint(objwidget.subform.fields.items())
    [('http___www_w3_org_2006_vcard_ns_streetAddress',
      <Field 'http___www_w3_org_2006_vcard_ns_streetAddress'>),
     ('http___www_w3_org_2006_vcard_ns_locality',
      <Field 'http___www_w3_org_2006_vcard_ns_locality'>),
     ('http___www_w3_org_2006_vcard_ns_postalCode',
      <Field 'http___www_w3_org_2006_vcard_ns_postalCode'>),
     ('http___www_w3_org_2006_vcard_ns_country',
      <Field 'http___www_w3_org_2006_vcard_ns_country'>)]
    >>> pprint(objwidget.subform.widgets.items())
    [('http___www_w3_org_2006_vcard_ns_streetAddress',
      <TextWidget 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_streetAddress'>),
     ('http___www_w3_org_2006_vcard_ns_locality',
      <TextWidget 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_locality'>),
     ('http___www_w3_org_2006_vcard_ns_postalCode',
      <TextWidget 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_postalCode'>),
     ('http___www_w3_org_2006_vcard_ns_country',
      <TextWidget 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_country'>)]

We shoud be able to fill out the form and submit it.

    >>> request = testing.TestRequest(form={
    ... 'form.widgets.http___xmlns_com_foaf_0_1_givenName': u'firstname',
    ... 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_locality': u'cityname',
    ... 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress-empty-marker': u'',
    ... 'form.buttons.add': u'Add'}
    ... )
    >>> add_form = ExtensibleAddForm(context, request)
    >>> add_form.rdftype = FOAF['Person']
    >>> add_form.update()

There should be some data in our triple store now

    >>> persuri = tuple(handler.store.subjects(RDF['type'], FOAF['Person']))[0]
    >>> handler.store.value(persuri, FOAF['givenName'])
    rdflib.term.Literal(u'firstname')
    >>> handler.store.value(persuri, RDF['type'])
    rdflib.term.URIRef(u'http://xmlns.com/foaf/0.1/Person')
    >>> handler.store.value(persuri, VCARD['hasAddress'])
    rdflib.term.URIRef(u'http://example.com/...')
    >>> addruri = handler.store.value(persuri, VCARD['hasAddress'])
    >>> handler.store.value(addruri, VCARD['locality'])
    rdflib.term.Literal(u'cityname')
    >>> handler.store.value(addruri, RDF['type'])
    rdflib.term.URIRef(u'http://www.w3.org/2006/vcard/ns#Address')

Let's now try to use an EditForm to change the data

    >>> from gu.z3cform.rdf.testing import ExtensibleEditForm
    >>> context = handler.get(persuri)
    >>> request = testing.TestRequest()
    >>> edit_form = ExtensibleEditForm(context, request)
    >>> edit_form.update()
    >>> pprint([f.value for f in add_form.widgets.values()])
    [u'firstname',
     u'',
     {'...}]
    >>> objwidget = add_form.widgets['http___www_w3_org_2006_vcard_ns_hasAddress']
    >>> pprint([f.value for f in objwidget.subform.widgets.values()])
    [u'', u'cityname', u'', u'']

Let's do some editing

    >>> request = testing.TestRequest(form={
    ... 'form.widgets.http___xmlns_com_foaf_0_1_givenName': u'newname',
    ... 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_locality': u'cityname',
    ... 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress.widgets.http___www_w3_org_2006_vcard_ns_postalCode': u'1111',
    ... 'form.widgets.http___www_w3_org_2006_vcard_ns_hasAddress-empty-marker': u'',
    ... 'form.buttons.apply': u'Apply'}
    ... )
    >>> edit_form = ExtensibleEditForm(context, request)
    >>> edit_form.update()

check the form

    >>> pprint([f.value for f in edit_form.widgets.values()])
    [u'newname',
     u'',
     {'...}]
    >>> objwidget = edit_form.widgets['http___www_w3_org_2006_vcard_ns_hasAddress']
    >>> pprint([f.value for f in objwidget.subform.widgets.values()])
    [u'', u'cityname', u'1111', u'']

and the data storage

    >>> tuple(handler.store.objects(persuri, FOAF['givenName']))
    rdflib.term.Literal(u'newname')
    >>> handler.store.value(persuri, RDF['type'])
    rdflib.term.URIRef(u'http://xmlns.com/foaf/0.1/Person')
    >>> handler.store.value(persuri, VCARD['hasAddress']) == addruri
    True
    >>> handler.store.value(addruri, VCARD['locality'])
    rdflib.term.Literal(u'cityname')
    >>> handler.store.value(addruri, VCARD['postalCode'])
    rdflib.term.Literal(u'1111')


finally let's try the display form as well

    >>> from gu.z3cform.rdf.testing import ExtensibleDisplayForm
    >>> request = testing.TestRequest()
    >>> display_form = ExtensibleDisplayForm(context, request)
    >>> html = display_form()
    >>> "newname" in html
    True
    >>> "cityname" in html
    True
    >>> "1111" in html
    True
